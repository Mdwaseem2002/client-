{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Received Data\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"dataDisplay\"\n}, [/*#__PURE__*/_createCommentVNode(\" Data will be displayed here \")], -1 /* HOISTED */));\nconst _hoisted_3 = [_hoisted_1, _hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [..._hoisted_3]);\n}","map":{"version":3,"names":["_createElementVNode","id","_createCommentVNode","_hoisted_1","_hoisted_2","_createElementBlock","_hoisted_3"],"sources":["/home/waseem/project/client-/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Received Data</h1>\n\n    <div id=\"dataDisplay\">\n      <!-- Data will be displayed here -->\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  mounted() {\n    this.fetchData();\n  },\n  methods: {\n    async fetchData() {\n      try {\n        const response = await fetch('/get_data');\n        const data = await response.json();\n        this.displayData(data);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    },\n    displayData(data) {\n      const dataDisplay = document.getElementById('dataDisplay');\n      if (data.length > 0) {\n        const dataList = document.createElement('ul');\n        data.forEach(item => {\n          const listItem = document.createElement('li');\n          listItem.textContent = `Name: ${item.name}, Email: ${item.email}, Password: ${item.password}`;\n          dataList.appendChild(listItem);\n        });\n        dataDisplay.appendChild(dataList);\n      } else {\n        dataDisplay.textContent = 'No data available.';\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Your component-specific styles */\n</style>\n"],"mappings":";;gEAEIA,mBAAA,CAAsB,YAAlB,eAAa;gEAEjBA,mBAAA,CAEM;EAFDC,EAAE,EAAC;AAAa,I,aACnBC,mBAAA,iCAAoC,C;oBAHtCC,UAAsB,EAEtBC,UAEM,C;;uBALRC,mBAAA,CAMM,aAPR,IAAAC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}