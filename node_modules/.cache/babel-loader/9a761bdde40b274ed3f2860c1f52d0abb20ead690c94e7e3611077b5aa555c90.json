{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      msg: 'Welcome All',\n      name: '',\n      email: '',\n      password: ''\n    };\n  },\n  methods: {\n    async submitForm() {\n      // Do something with the submitted data\n      console.log('Name:', this.name);\n      console.log('Email:', this.email);\n      console.log('Password:', this.password);\n\n      // Send data to an endpoint using the fetch API\n      try {\n        const response = await fetch('http://127.0.0.1:5000/save', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: this.name,\n            email: this.email,\n            password: this.password\n          })\n        });\n        if (response.ok) {\n          console.log('Data sent successfully!');\n        } else {\n          console.error('Failed to send data.');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n\n      // You can also navigate to another route if needed\n      this.$router.push('/display-data');\n    }\n  }\n};","map":{"version":3,"names":["data","msg","name","email","password","methods","submitForm","console","log","response","fetch","method","headers","body","JSON","stringify","ok","error","$router","push"],"sources":["/home/waseem/project/client-/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h2>{{ msg }}</h2>\n    \n    <!-- Form wrapper with grey background -->\n    <div class=\"form-wrapper\">\n      <!-- Your form with name, email, and password fields -->\n      <form @submit.prevent=\"submitForm\" class=\"form\">\n        <label for=\"name\" class=\"form-label\">Name:</label>\n        <input type=\"text\" id=\"name\" v-model=\"name\" required class=\"form-input\">\n\n        <label for=\"email\" class=\"form-label\">Email:</label>\n        <input type=\"email\" id=\"email\" v-model=\"email\" required class=\"form-input\">\n\n        <label for=\"password\" class=\"form-label\">Password:</label>\n        <input type=\"password\" id=\"password\" v-model=\"password\" required class=\"form-input\">\n\n        <button type=\"submit\" class=\"form-button\">Submit</button>\n      </form>\n    </div>\n\n    <button type=\"submit\">get</button>\n    <router-link to=\"/display-data\">Go to Display Data</router-link>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      msg: 'Welcome All',\n      name: '',\n      email: '',\n      password: '',\n    };\n  },\n  methods: {\n    async submitForm() {\n      // Do something with the submitted data\n      console.log('Name:', this.name);\n      console.log('Email:', this.email);\n      console.log('Password:', this.password);\n\n      // Send data to an endpoint using the fetch API\n      try {\n        const response = await fetch('http://127.0.0.1:5000/save', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            name: this.name,\n            email: this.email,\n            password: this.password,\n          }),\n        });\n\n        if (response.ok) {\n          console.log('Data sent successfully!');\n        } else {\n          console.error('Failed to send data.');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n\n      // You can also navigate to another route if needed\n      this.$router.push('/display-data');\n    },\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n}\n\n.form-wrapper {\n  background-color: #dddddd; /* Grey background color */\n  padding: 20px;\n  border-radius: 10px;\n  margin-top: 20px;\n}\n\n.form {\n  text-align: center;\n}\n\n.form-label {\n  display: block;\n  margin-bottom: 10px;\n  color: #333333; /* Adjust label text color */\n}\n\n.form-input {\n  width: 200px;\n  padding: 5px;\n  margin-bottom: 10px;\n}\n\n.form-button {\n  padding: 5px 10px;\n  margin-top: 10px;\n  background-color: #007bff; /* Adjust button background color */\n  color: #ffffff; /* Adjust button text color */\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n/* Your component-specific styles */\n</style>\n"],"mappings":";AA2BA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAE,aAAa;MAClBC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB;MACAC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE,IAAI,CAACN,IAAI,CAAC;MAC/BK,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAACL,KAAK,CAAC;MACjCI,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAACJ,QAAQ,CAAC;;MAEvC;MACA,IAAI;QACF,MAAMK,QAAO,GAAI,MAAMC,KAAK,CAAC,4BAA4B,EAAE;UACzDC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBb,IAAI,EAAE,IAAI,CAACA,IAAI;YACfC,KAAK,EAAE,IAAI,CAACA,KAAK;YACjBC,QAAQ,EAAE,IAAI,CAACA;UACjB,CAAC;QACH,CAAC,CAAC;QAEF,IAAIK,QAAQ,CAACO,EAAE,EAAE;UACfT,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;QACxC,OAAO;UACLD,OAAO,CAACU,KAAK,CAAC,sBAAsB,CAAC;QACvC;MACF,EAAE,OAAOA,KAAK,EAAE;QACdV,OAAO,CAACU,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;;MAEA;MACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,eAAe,CAAC;IACpC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}