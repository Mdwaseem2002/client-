{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-15a5e38c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, [/*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"color\": \"greenyellow\"\n  }\n}, \"HelloWorld.\")], -1 /* HOISTED */));\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Email\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Password\")])], -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h2\", null, _toDisplayString($data.msg), 1 /* TEXT */), _hoisted_1, _createCommentVNode(\" Button to fetch data \"), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.fetchData && $options.fetchData(...args))\n  }, \"Fetch Data\"), _createCommentVNode(\" Display data in a table \"), $data.data.length > 0 ? (_openBlock(), _createElementBlock(\"table\", _hoisted_2, [_hoisted_3, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.data, (item, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.email), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.password), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_router_link, {\n    to: \"/\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Go back to Form\")]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementVNode","style","key","_createElementBlock","_toDisplayString","$data","msg","_hoisted_1","_createCommentVNode","onClick","_cache","args","$options","fetchData","data","length","_hoisted_2","_hoisted_3","_Fragment","_renderList","item","index","name","email","password","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_"],"sources":["/home/waseem/project/client-/src/components/DisplayData.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>{{ msg }}</h2>\n    <h1><p style=\"color: greenyellow;\">HelloWorld.</p></h1>\n\n    <!-- Button to fetch data -->\n    <button @click=\"fetchData\">Fetch Data</button>\n\n    <!-- Display data in a table -->\n    <table v-if=\"data.length > 0\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Email</th>\n          <th>Password</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(item, index) in data\" :key=\"index\">\n          <td>{{ item.name }}</td>\n          <td>{{ item.email }}</td>\n          <td>{{ item.password }}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <router-link to=\"/\">Go back to Form</router-link>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      msg: 'Display Data',\n      data: [], // Array to store fetched data\n    };\n  },\n  methods: {\n    async fetchData() {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/');\n        if (response.ok) {\n          const jsonData = await response.json();\n          this.data = jsonData;\n          console.log('Data fetched successfully:', this.data);\n        } else {\n          console.error('Failed to fetch data.');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    },\n  },\n  mounted() {\n    // Fetch data when the component is mounted\n    this.fetchData();\n  },\n};\n</script>\n\n<style scoped>\n/* Your component-specific styles */\n</style>\n"],"mappings":";;gEAGIA,mBAAA,CAAuD,a,aAAnDA,mBAAA,CAA8C;EAA3CC,KAA2B,EAA3B;IAAA;EAAA;AAA2B,GAAC,aAAW,E;;EAHlDC,GAAA;AAAA;gEAUMF,mBAAA,CAMQ,gB,aALNA,mBAAA,CAIK,a,aAHHA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAiB,YAAb,UAAQ,E;;;uBAbpBG,mBAAA,CA0BM,cAzBJH,mBAAA,CAAkB,YAAAI,gBAAA,CAAXC,KAAA,CAAAC,GAAG,kBACVC,UAAuD,EAEvDC,mBAAA,0BAA6B,EAC7BR,mBAAA,CAA8C;IAArCS,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAE,YAAU,GAErCH,mBAAA,6BAAgC,EACnBH,KAAA,CAAAS,IAAI,CAACC,MAAM,Q,cAAxBZ,mBAAA,CAeQ,SAxBZa,UAAA,GAUMC,UAMQ,EACRjB,mBAAA,CAMQ,iB,kBALNG,mBAAA,CAIKe,SAAA,QAtBbC,WAAA,CAkBoCd,KAAA,CAAAS,IAAI,EAlBxC,CAkBoBM,IAAI,EAAEC,KAAK;yBAAvBlB,mBAAA,CAIK;MAJ8BD,GAAG,EAAEmB;IAAK,IAC3CrB,mBAAA,CAAwB,YAAAI,gBAAA,CAAjBgB,IAAI,CAACE,IAAI,kBAChBtB,mBAAA,CAAyB,YAAAI,gBAAA,CAAlBgB,IAAI,CAACG,KAAK,kBACjBvB,mBAAA,CAA4B,YAAAI,gBAAA,CAArBgB,IAAI,CAACI,QAAQ,iB;wCArB9BhB,mBAAA,gBA0BIiB,YAAA,CAAiDC,sBAAA;IAApCC,EAAE,EAAC;EAAG;IA1BvBC,OAAA,EAAAC,QAAA,CA0BwB,MAAe,CA1BvCC,gBAAA,CA0BwB,iBAAe,E;IA1BvCC,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}