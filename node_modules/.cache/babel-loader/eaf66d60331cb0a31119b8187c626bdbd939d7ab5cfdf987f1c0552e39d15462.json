{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"WELCOME TO OUR PAGE\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"form-wrapper\"\n};\nconst _hoisted_4 = {\n  class: \"input-group\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"name\"\n}, \"Name:\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"input-group\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"Email:\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"input-group\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"Password:\", -1 /* HOISTED */));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Submit\", -1 /* HOISTED */));\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Existing Data\", -1 /* HOISTED */));\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"existingData\"\n}, [/*#__PURE__*/_createCommentVNode(\" Existing Data Display \")], -1 /* HOISTED */));\nconst _hoisted_13 = {\n  class: \"time\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createCommentVNode(\" Form to submit data \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.formData.name = $event),\n    required: \"\",\n    class: \"gray-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formData.name]])]), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.formData.email = $event),\n    required: \"\",\n    class: \"gray-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formData.email]])]), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.formData.password = $event),\n    required: \"\",\n    class: \"gray-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formData.password]])]), _hoisted_10], 32 /* NEED_HYDRATION */)]), _createCommentVNode(\" Get button to fetch existing data \"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.fetchExistingData && $options.fetchExistingData(...args))\n  }, \"Get\"), _createCommentVNode(\" Existing Data and Time \"), _hoisted_11, _hoisted_12, _createElementVNode(\"div\", _hoisted_13, _toDisplayString($data.currentTime), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","id","_createCommentVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","onSubmit","_cache","_withModifiers","args","$options","submitForm","_hoisted_4","_hoisted_5","$event","$data","formData","name","required","_hoisted_6","_hoisted_7","email","_hoisted_8","_hoisted_9","password","_hoisted_10","onClick","fetchExistingData","_hoisted_11","_hoisted_12","_hoisted_13","_toDisplayString","currentTime"],"sources":["/home/waseem/project/client-/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>WELCOME TO OUR PAGE</h1>\n\n    <!-- Form to submit data -->\n    <div class=\"form-wrapper\">\n      <form @submit.prevent=\"submitForm\">\n        <div class=\"input-group\">\n          <label for=\"name\">Name:</label>\n          <input type=\"text\" id=\"name\" v-model=\"formData.name\" required class=\"gray-input\">\n        </div>\n        <div class=\"input-group\">\n          <label for=\"email\">Email:</label>\n          <input type=\"email\" id=\"email\" v-model=\"formData.email\" required class=\"gray-input\">\n        </div>\n        <div class=\"input-group\">\n          <label for=\"password\">Password:</label>\n          <input type=\"password\" id=\"password\" v-model=\"formData.password\" required class=\"gray-input\">\n        </div>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n\n    <!-- Get button to fetch existing data -->\n    <button @click=\"fetchExistingData\">Get</button>\n\n    <!-- Existing Data and Time -->\n    <h2>Existing Data</h2>\n    <div id=\"existingData\">\n      <!-- Existing Data Display -->\n    </div>\n    <div class=\"time\">{{ currentTime }}</div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      formData: {\n        name: '',\n        email: '',\n        password: ''\n      },\n      existingData: [],\n      currentTime: ''\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/save', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(this.formData)\n        });\n        const responseData = await response.json();\n        console.log(responseData.message); // Log server response\n        alert(responseData.message); // Show response message\n        // Clear form fields after submission\n        this.formData.name = '';\n        this.formData.email = '';\n        this.formData.password = '';\n        // Do not fetch existing data here\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    },\n    async fetchExistingData() {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/get_data');\n        if (response.ok) {\n          this.existingData = await response.json();\n        } else {\n          console.error('Failed to fetch existing data:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    },\n    updateTime() {\n      const now = new Date();\n      const hours = now.getHours().toString().padStart(2, '0');\n      const minutes = now.getMinutes().toString().padStart(2, '0');\n      const seconds = now.getSeconds().toString().padStart(2, '0');\n      this.currentTime = `${hours}:${minutes}:${seconds}`;\n    }\n  },\n  mounted() {\n    // Update time initially and every second\n    this.updateTime();\n    setInterval(() => {\n      this.updateTime();\n    }, 1000);\n  }\n};\n</script>\n\n<style scoped>\n.container {\n  text-align: center;\n}\n\n.form-wrapper {\n  margin-top: 20px;\n}\n\n.input-group {\n  display: flex;\n  flex-direction: row;\n  justify-content: center; /* Align items in the center */\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.input-group label {\n  width: px; /* Adjust width as needed */\n  text-align: right;\n  margin-right: 10px;\n}\n\n.input-group input {\n  flex: 1; /* Take remaining space */\n  padding: 5px;\n  margin-bottom: 5px;\n  border: 1px solid #ccc;\n  border-radius: 3px;\n}\n\n.gray-input {\n  color: rgb(245, 108, 108);\n}\n\nbutton {\n  margin-top: 10px;\n}\n\n.time {\n  margin-top: 20px;\n  font-size: 24px;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAW;gEACpBC,mBAAA,CAA4B,YAAxB,qBAAmB;;EAGlBD,KAAK,EAAC;AAAc;;EAEhBA,KAAK,EAAC;AAAa;gEACtBC,mBAAA,CAA+B;EAAxBC,GAAG,EAAC;AAAM,GAAC,OAAK;;EAGpBF,KAAK,EAAC;AAAa;gEACtBC,mBAAA,CAAiC;EAA1BC,GAAG,EAAC;AAAO,GAAC,QAAM;;EAGtBF,KAAK,EAAC;AAAa;gEACtBC,mBAAA,CAAuC;EAAhCC,GAAG,EAAC;AAAU,GAAC,WAAS;iEAGjCD,mBAAA,CAAqC;EAA7BE,IAAI,EAAC;AAAQ,GAAC,QAAM;iEAQhCF,mBAAA,CAAsB,YAAlB,eAAa;iEACjBA,mBAAA,CAEM;EAFDG,EAAE,EAAC;AAAc,I,aACpBC,mBAAA,2BAA8B,C;;EAE3BL,KAAK,EAAC;AAAM;;uBA9BnBM,mBAAA,CA+BM,OA/BNC,UA+BM,GA9BJC,UAA4B,EAE5BH,mBAAA,yBAA4B,EAC5BJ,mBAAA,CAgBM,OAhBNQ,UAgBM,GAfJR,mBAAA,CAcO;IAdAS,QAAM,EAAAC,MAAA,QAAAA,MAAA,MANnBC,cAAA,KAAAC,IAAA,KAM6BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC/BZ,mBAAA,CAGM,OAHNe,UAGM,GAFJC,UAA+B,E,gBAC/BhB,mBAAA,CAAiF;IAA1EE,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,MAAM;IATtC,uBAAAO,MAAA,QAAAA,MAAA,MAAAO,MAAA,IASgDC,KAAA,CAAAC,QAAQ,CAACC,IAAI,GAAAH,MAAA;IAAEI,QAAQ,EAAR,EAAQ;IAACtB,KAAK,EAAC;iDAA9BmB,KAAA,CAAAC,QAAQ,CAACC,IAAI,E,KAErDpB,mBAAA,CAGM,OAHNsB,UAGM,GAFJC,UAAiC,E,gBACjCvB,mBAAA,CAAoF;IAA7EE,IAAI,EAAC,OAAO;IAACC,EAAE,EAAC,OAAO;IAbxC,uBAAAO,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAakDC,KAAA,CAAAC,QAAQ,CAACK,KAAK,GAAAP,MAAA;IAAEI,QAAQ,EAAR,EAAQ;IAACtB,KAAK,EAAC;iDAA/BmB,KAAA,CAAAC,QAAQ,CAACK,KAAK,E,KAExDxB,mBAAA,CAGM,OAHNyB,UAGM,GAFJC,UAAuC,E,gBACvC1B,mBAAA,CAA6F;IAAtFE,IAAI,EAAC,UAAU;IAACC,EAAE,EAAC,UAAU;IAjB9C,uBAAAO,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAiBwDC,KAAA,CAAAC,QAAQ,CAACQ,QAAQ,GAAAV,MAAA;IAAEI,QAAQ,EAAR,EAAQ;IAACtB,KAAK,EAAC;iDAAlCmB,KAAA,CAAAC,QAAQ,CAACQ,QAAQ,E,KAEjEC,WAAqC,C,8BAIzCxB,mBAAA,uCAA0C,EAC1CJ,mBAAA,CAA+C;IAAtC6B,OAAK,EAAAnB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAiB,iBAAA,IAAAjB,QAAA,CAAAiB,iBAAA,IAAAlB,IAAA,CAAiB;KAAE,KAAG,GAEtCR,mBAAA,4BAA+B,EAC/B2B,WAAsB,EACtBC,WAEM,EACNhC,mBAAA,CAAyC,OAAzCiC,WAAyC,EAAAC,gBAAA,CAApBhB,KAAA,CAAAiB,WAAW,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}